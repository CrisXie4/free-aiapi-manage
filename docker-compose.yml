version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: free-ai-api-control
    restart: unless-stopped

    ports:
      - "3000:3000"

    environment:
      - NODE_ENV=production
      - PORT=3000

    volumes:
      # 持久化数据文件
      - ./data:/app/data

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

    networks:
      - app-network

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: free-ai-api-nginx
    restart: unless-stopped

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # SSL 证书（如果需要HTTPS）
      # - ./nginx/ssl:/etc/nginx/ssl:ro

    depends_on:
      - app

    networks:
      - app-network

    # 如果不需要 nginx，可以注释掉整个 nginx 服务

networks:
  app-network:
    driver: bridge

volumes:
  data:
    driver: local
